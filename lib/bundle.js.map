{"version":3,"sources":["webpack:///webpack/bootstrap f7752623b6794d231209","webpack:///./lib/asteroids3D.js","webpack:///./lib/asteroid.js","webpack:///./lib/game.js","webpack:///./lib/gameview.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA,oC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uB;AACA;AACA;AACA,kB;AACA;AACA,mB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;;;AAIT;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA,CAAC;;AAED;AACA;AACA;AACA;AACA,iB;AACA,0B;AACA,8B;AACA,+B;AACA;AACA,mB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iB;AACA,0B;AACA,8B;AACA,+B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,iB;AACA,0B;AACA,8B;AACA,+B;AACA;AACA,mB;AACA;;AAEA;;AAEA;AACA;;AAEA,GAAG;AACH;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,iB;AACA,0B;AACA,8B;AACA,+B;AACA;AACA,mB;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;;AAEA,oD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qB;AACA,oB;AACA,qB;AACA,oB;AACA,Y;AACA;AACA;AACA,c;AACA;AACA,U;;;AAGA,e;AACA,e;AACA;AACA;;AAEA,iB;AACA,qB;;;AAGA,sB;;AAEA;AACA,kBAAkB,QAAQ;AAC1B,oBAAoB,QAAQ;AAC5B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ,Y;AAC3B,qBAAqB,SAAS;AAC9B,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;;;AAGA;AACA,kBAAkB,QAAQ;AAC1B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;;AAGA;AACA,iBAAiB,QAAQ,U;AACzB,mBAAmB,QAAQ;AAC3B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA,gC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8B;AACA,8B;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,sC;AACA;AACA;AACA;AACA;AACA;AACA,oB;AACA,4B;AACA,e;AACA;;;AAGA;AACA,iB;AACA,qB;;;;AAIA;AACA;AACA;AACA;AACA,mB;AACA,4B;AACA,gC;AACA,iC;AACA;AACA;AACA;AACA;AACA;AACA,c;;;;;;;AC/TA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iC;AACA,0B;AACA;;;AAGA;AACA;AACA;AACA;AACA,oB;AACA;AACA;AACA,qB;AACA,kD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qB;AACA;AACA;AACA,iB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,0B;;;;;;;;;;;;AC/DA;;;AAGA;AACA;AACA,wB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,a;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;AAMA;AACA;AACA;;;AAGA;AACA,sB;;;;;;AClDA;AACA;AACA,mB;AACA,qB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,0B","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f7752623b6794d231209","const Asteroid = require(\"./asteroid\");\nconst Ship = require(\"./ship\");\nconst Game = require(\"./game\"); \nconst GameView = require(\"./gameview\");\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  canvas.width = 1000;\n  canvas.height = 1000;\n  // const asteroids = []; \n  // var radius = 1;\n  // var hmove = 500;\n  // var vmove = 500;\n  const game = new Game();\n  new GameView(game, ctx).start();\n  // function draw() {\n  //   const canvas = document.getElementById(\"canvas\");\n  //   const ctx = canvas.getContext(\"2d\");\n  //   ctx.clearRect(0,0,1000,1000);\n  //   ctx.fillStyle = \"black\";\n  //   ctx.beginPath(); \n  //   ctx.arc(hmove, vmove, radius, 0, 2 * Math.PI, false);\n  //   ctx.fill();\n  //   hmove += 2; \n  //   vmove += 0;\n  //   radius += 2; \n  //   if (radius < 200) {\n  //     let v = draw.bind(ctx);\n  //     requestAnimationFrame(v);\n  //   }\n    \n  // }\n\n  // // asteroids.forEach((asteroid) => {\n  //   draw(500, 500);\n  //   // draw(300, 200);\n  // // });\n\n  \n  \n  // function addAsteroids() {\n  //   for (let i = 0; i < 11; i++) {\n  //     asteroids.push(this.asteroid);\n  //   }\n  // }\n\n\n  // function remove(asteroid) {\n  //   asteroids.splice(this.asteroids.indexOf(asteroid), 1);\n  // }\n\n\n});\n\nfunction renderUp() {\n  hullGeometry();\n  shooterGeometry();\n  wingGeometry();\n  bodyGeometry(); \n  ctx.fillStyle = 'black'; \n  ctx.fillRect(0,0, 800, 600); \n  ctx.clearRect(0,0, 800, 600); \n  ctx.translate(0,-1);\n  theta +=  dtheta;  \n  // renderPoint(allpoints);\n  \n  allpoints.forEach((point) => {\n    rotateUp(point);\n    renderPoint(point);\n  });\n  // requestAnimationFrame(renderUp());\n  \n}\n\nfunction renderRight() {\n  hullGeometry();\n  shooterGeometry();\n  wingGeometry();\n  bodyGeometry(); \n  ctx.fillStyle = 'black'; \n  ctx.fillRect(0,0, 800, 600); \n  ctx.clearRect(0,0, 800, 600); \n  ctx.translate(1,0);\n  theta +=  dtheta;\n  // renderPoint(allpoints);\n  \n  allpoints.forEach((point) => {\n    // point = (x y z )\n//   point = rotateY(point, 0.23 * theta);\n  renderPoint(point);\n    // console.log(point);\n  });\n  // requestAnimationFrame(renderRight());\n  console.log(\"moved\");\n  \n\n}\n\nfunction renderDown() {\n  hullGeometry();\n  shooterGeometry();\n  wingGeometry();\n  bodyGeometry(); \n  ctx.fillStyle = 'black'; \n  ctx.fillRect(0,0, 800, 600); \n  ctx.clearRect(0,0, 800, 600); \n  ctx.translate(0,1);\n  theta +=  dtheta;  \n  // renderPoint(allpoints);\n  \n  allpoints.forEach((point) => {\n    \n    // point = rotateX(point, 0.23 * theta);\n    renderPoint(point);\n    \n  });\n  console.log(\"moved\");\n  // requestAnimationFrame(renderDown());\n  \n}\n\n\nfunction renderLeft() {\n  hullGeometry();\n  shooterGeometry();\n  wingGeometry();\n  bodyGeometry(); \n  ctx.fillStyle = 'black'; \n  ctx.fillRect(0,0, 800, 600); \n  ctx.clearRect(0,0, 800, 600); \n  ctx.translate(-1,0);\n  theta +=  dtheta;  \n  // renderPoint(allpoints);\n  allpoints.forEach((point) => {\n    renderPoint(point);\n    \n  });\n  // requestAnimationFrame(renderLeft());\n}\n \nwindow.addEventListener('keydown', doKeyDown, true); \n\nfunction doKeyDown(e) {\nswitch(e.keyCode) {\ncase 38: //up\nrequestAnimationFrame(renderUp());\nbreak;\ncase 40: //down\nrequestAnimationFrame(renderDown());\nbreak;\n\ncase 37: //left\nrequestAnimationFrame(renderLeft());\n\nbreak;\n\ncase 39: //right\nrequestAnimationFrame(renderRight());\n\nbreak;\n}\n}\nvar model_min_x = -2; \nvar model_max_x = 2; \nvar model_min_y = -2; \nvar model_max_y = 2; \nvar w = 800; \nvar h = 600;\nvar allpoints = [];\nvar theta = 0; \nvar dtheta = 0.02;\nctx = ctx; \n\n\n// var W = 800; \n// var H = 600; \n// var MODEL_MIN_X = -2, MODEL_MAX_X = 2;\n// var MODEL_MIN_Y = -2, MODEL_MAX_Y = 2;\n\n// var theta = 0; \n// var dtheta = 0.02; \n\n\n// var allpoints = []; \n\nfunction bodyGeometry() {\n  for (let x = -1; x <= 1; x += .5 ) {\n    for (let y = -1; y <= 1; y += .5 ) {\n      for (let z = -4; z <= 4; z += .5 ) {\n        allpoints.push([x, y, z]);\n      }\n    }\n  }\n}\n\nfunction hullGeometry() {\n  for (let x = -.5; x <=.5; x += .5 ) { \n    for (let y = -.5; y <= .5; y += .5 ) {\n      for (let z = 5; z <= 6; z += .5 ) {\n       allpoints.push([x,y,z]);\n      }\n    }\n  }\n}\n\n\nfunction wingGeometry() {\n  for (let x = -4; x <= 4; x+= .5) {\n    for(let z = -4; z <= 4; z+= .5) {\n      allpoints.push([(-x/.5), x, z], [(x/.5),x,z]);\n    }\n  }\n}\n\n\nfunction shooterGeometry() {\n  for (let x = 4; x <= 5; x+= .5) { \n    for (let y = 4; y <= 5; y+= .5) {\n      for (let z = -4; z <= 4; z+= .5) {\n        allpoints.push([(x/.5), y, z], [(-x/.5), -y, z]);\n        allpoints.push([(x/.5), -y, z], [(-x/.5), y, z]);\n      }\n    }\n  }\n}\n\nfunction rotateY(point, theta) { \n  var x = point[0], \n      y = point[1], \n      z = point[2];\n  \n  return  [\n    Math.cos(theta) * x - Math.sin(theta) * z,\n    y,\n    Math.sin(theta) * x + Math.cos(theta) * z \n    \n  ];\n}\n\nfunction rotateX(point, theta) { \n  var x = point[0], \n      y = point[1], \n      z = point[2];\n  \n  return [\n    x, \n    Math.cos(theta) * y - Math.sin(theta) * z,\n    Math.sin(theta) * y  + Math.cos(theta) * z \n    \n  ];\n}\n\nfunction rotateUp (point, theta) {\n  var x = point[0], \n      y = point[1], \n      z = point[2]; \n  return [ \n    x,\n    Math.cos(theta) * y - Math.sin(theta) * z,\n    z \n  ];\n}\nfunction perspective(point) {\n  var x = point[0], \n      y = point[1], \n      z = point[2]; \n  return [ \n    x / (z + 20), //distance between camera point and projection plane (divide by z index)\n    y / (z + 20) \n  ];\n\n}\n// taking out z index for now \n// takes coordinate from model and projects into 2 dimensional\nfunction project(point) {\n  var perspectivePoint = perspective(point);\n  var x = perspectivePoint[0]; \n  var y = perspectivePoint[1];  \n  return [\n    w * (x - (-2)) / ((2) - (-2)), \n    h * (1 - (y - (-2)) / ((2)- (-2)))\n  ];\n}\n\n\n\nfunction renderPoint(point) {\n  var projectedPoint = project(point); \n  var x = projectedPoint[0], \n      y = projectedPoint[1];\n  ctx.beginPath();\n  ctx.moveTo(x,y);\n  ctx.lineTo(x + 4, y + 4);\n  ctx.lineWidth = 4; \n  ctx.strokeStyle = 'black'; \n  ctx.stroke(); \n}\n\n\n// \n// var theta = 0; \n// var dtheta = 0.02; \n\n\n\nfunction render() {\n    hullGeometry();\n    shooterGeometry();\n    wingGeometry();\n    bodyGeometry(); \n    ctx.fillStyle = 'black'; \n    ctx.fillRect(0,0, 800, 600); \n    ctx.clearRect(0,0, 800, 600); \n    allpoints.forEach((point) => {\n      renderPoint(point);\n    }\n  );\n}\nthis.render();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/asteroids3D.js\n// module id = 0\n// module chunks = 0","\nconst DEFAULT = {\n  radius: 3\n};\n\nclass Asteroid {\n  constructor(hmove, vmove, radius, color) {\n    this.move = 500;\n    this.vmove = 500;\n    this.radius = DEFAULT.radius; \n    this.color = \"yellow\"; \n  }\n  \n\n  draw(ctx) {\n    // ctx.clearRect(0,0,1\"000,1000);\n    ctx.fillStyle = \"yellow\";\n    // ctx.fillRect(0,0,800,600);\n    ctx.beginPath(); \n    ctx.arc(this.move, this.move, this.radius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    this.radius += 2; \n    var num = [1,20,3,4,15,6,17,-15,-6,-7,-83,-9]; \n    this.move += num[Math.floor(Math.random() * num.length)];\n    // this.move += num[Math.floor(Math.random() * num.length)];\n    \n    // this.vmove += 1;\n    // this.hmove += num[Math.floor(Math.random() * num.length)];\n    // this.vmove -= num[Math.floor(Math.random() * num.length)];\n    // this.hmove -= num[Math.floor(Math.random() * num.length)];\n    // this.vmove += num[Math.floor(Math.random() * num.length)];\n    \n    \n    // if (this.radius <= 200) {\n      let v = this.draw.bind(ctx);\n      requestAnimationFrame(v);\n    // }\n  }\n\n}\n\n// \n// var radius = 1;\n// var move = 75;\n// function draw() {\n//   const canvas = document.getElementById(\"canvas\");\n//   const ctx = canvas.getContext(\"2d\");\n//   ctx.clearRect(0,0,1000,1000);\n//   ctx.fillStyle = \"black\";\n//   ctx.beginPath(); \n//   ctx.arc(500, 300, radius, 0, 2 * Math.PI, false);\n//   ctx.fill();\n//   radius += 2; \n//   if (radius < 200) {\n//     let v = draw.bind(ctx);\n//     requestAnimationFrame(v);\n//   }\n// }\n// draw();\n\n// \n\n\nmodule.exports = Asteroid;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/asteroid.js\n// module id = 1\n// module chunks = 0","const Asteroid = require(\"./asteroid\");\n\n\nclass Game {\n  constructor() {\n    this.asteroids = []; \n    this.objects = [];\n    this.addAsteroids();\n  }\n\n  addAsteroids() {\n    if (this.asteroids.length < 3) {\n      this.asteroids.push( new Asteroid( ));\n      this.objects.push(this.asteroid);\n  }}\n\n  addShip() { \n    this.ship.push(this.ship);\n    this.objects.push(this.ship);\n  }\n\n  // addObjects\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, 1000, 1000);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, 1000, 1000);\n\n    \n\n    \n    this.asteroids.forEach((object) => {\n      object.draw(ctx);\n      if (object.radius > 150) {\n        this.removeAsteroid(object);\n        this.addAsteroids();\n      }\n    });\n  }\n\n  \n\n  \n\n  removeAsteroid(asteroid) {\n    this.asteroids.splice(this.asteroids.indexOf(asteroid), 1);\n  }\n\n\n}\nmodule.exports = Game;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 3\n// module chunks = 0","class GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx; \n    this.game = game; \n  }\n\n\n  bindKeyHandlers() {\n    const ship = this.ship;\n\n    Object.keys(GameView.MOVES).forEach((k) => {\n      const move = GameView.MOVES[k];\n    });\n\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    // start the animation\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n\n    // this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n\n    // every call to animate requests causes another call to animate\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nGameView.MOVES = {\n  w: [0, -1],\n  a: [-1, 0],\n  s: [0, 1],\n  d: [1, 0],\n};\n\n\nmodule.exports = GameView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/gameview.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}